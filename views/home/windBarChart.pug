figure.highcharts-figure
    #container

script.
    let drilldownData = setDrilldownForEachDay();
    let barChart = Highcharts.chart('container', {
        chart: {
            type: 'column'
        },
        title: {
            text: 'Wind Speed for one month in 2020'
        },
        accessibility: {
            announceNewData: {
                enabled: true
            }
        },
        xAxis: {
            type: 'category'
        },
        yAxis: {
            title: {
                text: 'WindSpeed (m/s)'
            }

        },
        legend: {
            enabled: false
        },
        plotOptions: {
            series: {
                borderWidth: 1,
                dataLabels: {
                    enabled: true,
                    format: '{point.y:.1f}m/s'
                }
            }
        },

        tooltip: {
            headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
            pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}m/s</b> in day <br/>'
        },

        series: [
            {
                name: "windSpeedOnMonth",
                colorByPoint: true,
                data: []
            }
        ],
        drilldown: {
            series: drilldownData
        }
    });

    //set data to drilldwon of barChart for each day
    function setDrilldownForEachDay() {
        let setWindDataOfDrilldownForEachDay = [];

        for (let i = 6; i >= 0; i--) {
            let drilldownName = document.getElementById('dayExpress' + i).value;
            let drilldownId = document.getElementById('dayExpress' + i).value;

            if (i === 0) {
                setWindDataOfDrilldownForEachDay.push({
                    name: drilldownName,
                    id: drilldownId,
                    data: setLastDrilldown()
                })
            } else {
                setWindDataOfDrilldownForEachDay.push({
                    name: drilldownName,
                    id: drilldownId,
                    data: setDrilldown(i)
                })
            }
        }

        return setWindDataOfDrilldownForEachDay;
    }

    // set data to drilldown of barChart
    function setDrilldown(num) {
        const dataTermStart = num * 12 - 1;
        const dataTermEnd = num * 12 - 12;
        const time = ["0시", "2시", "4시", "6시", "8시", "10시", "12시", "14시", "16시", "18시", "20시", "22시"];
        let setWindDataOfDrilldown = [];

        for (let i = dataTermStart, j = 0; i >= dataTermEnd; i--, j++) {
            setWindDataOfDrilldown.push(
                [
                    time[j],
                    document.getElementById('windSpeedEachDay' + i).value * 1
                ]
            )
        }

        return setWindDataOfDrilldown;
    }

    // set lastData to drilldown of barChart
    function setLastDrilldown() {
        const time = ["0시", "2시", "4시", "6시", "8시", "10시", "12시", "14시", "16시", "18시", "20시", "22시"];
        let setWindDataOfDrilldown = [];

        for (let i = 0, j = 0; i < 12; i++, j++) {
            let contentName = document.getElementById('windSpeedLastDay' + i) !== null ? time[j] : "(feature)" + time[j];
            let dataValue = document.getElementById('windSpeedLastDay' + i) !== null ? document.getElementById('windSpeedLastDay' + i).value * 1 : null;

            setWindDataOfDrilldown.push(
                [
                    contentName,
                    dataValue
                ]
            )
        }

        return setWindDataOfDrilldown;
    }

    // set data to barChart
    function setBarChart(dayWindData) {
        let setWindData = [];

        for (let i = 6; i >= 0; i--) {
            let graphContentsName = dayWindData[i].rgst_dt;
            let windSpeedData = dayWindData[i].windSpeed * 1;

            setWindData.push({
                name: graphContentsName,
                y: windSpeedData,
                drilldown: graphContentsName
            })
        }

        return setWindData;
    }

    setTimeout(function () {                                                        // cuz when user use the drilldown, if the data has updated, the error would be happened.
        updateBarChart();
    }, 2000);

    const updateBarChart = () => {
        $.ajax({
            data: {},
            type: 'get',
            dataType: 'json',
            url: '/windBarChart/api/update',
            contentType: 'application/json',
            success: (result) => {
                // result = JSON.parse(result);                                        // data receive as String so I transfer that to JSON type
                const chartUpdateForDay = barChart.series[0];
                const drilldownOfChartUpdate = barChart.drilldown.series;

                chartUpdateForDay.setData(setBarChart(result));                      // set BarChart (7 graph -> content name, windSpeed, drilldownName)
            },
            error: (err) => {
                console.log(err);
            }
        })
    }
